@model IEnumerable<CatalogDomain.Model.Rating>

@{
    ViewData["Title"] = "Index";
}

<h1>Ratings</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Add</a>
</p>
<table class="table text-center">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Movie)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Source)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Value)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Movie.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Source)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Value)
                    </td>

                    <td class="text-nowrap text-end">
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">Details</a>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                    </td>
                </tr>
        }
    </tbody>
</table>


<div class="col-lg-4">
    <div class="card h-100 shadow-sm">
        <div class="card-body d-flex flex-column">
            <h5 class="card-title">Top Rated Movies Chart</h5>
            <select id="ratingSourceSelector" class="form-select mb-3" onchange="loadTopRatedChart()">
                <option disabled selected>Завантаження джерел...</option>
            </select>

            <div id="topRatedMoviesChart" class="flex-grow-1 w-100" style="min-height: 320px;"></div>
        </div>
    </div>
</div>


@section Scripts
{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(initializeCharts);

        function initializeCharts() {
            fetch('/api/chart/sources')
                .then(response => response.json())
                .then(sources => {
                    const selector = document.getElementById("ratingSourceSelector");
                    selector.innerHTML = "";

                    sources.forEach(source => {
                        const option = document.createElement("option");
                        option.value = source;
                        option.textContent = source;
                        selector.appendChild(option);
                    });

                    if (sources.length > 0) {
                        selector.value = sources[0];
                        loadTopRatedChart();
                    }
                })
                .catch(error => console.error("Error during data download:", error));
        }

        function loadTopRatedChart() {
            const selectedSource = document.getElementById("ratingSourceSelector").value;

            fetch(`/api/chart/topRatedMovies?source=${encodeURIComponent(selectedSource)}`)
                .then(response => response.json())
                .then(data => {
                    console.log("Chart data:", data);

                    const dataTable = new google.visualization.DataTable();
                    dataTable.addColumn('string', 'Movie Title');
                    dataTable.addColumn('number', 'Rating');

                    data.forEach(item => {
                        dataTable.addRow([item.title, item.ratingValue]);
                    });
                     
                    const options = {
                        title: `Top 10 Movies by Source: ${selectedSource}`,
                        width: '100%',
                        height: 600,
                        legend: { position: 'none' },
                        chartArea: { width: '80%' },
                        hAxis: {
                            minValue: 0,
                            maxValue: 100,
                            format: '0'
                        }
                    };

                    const chart = new google.visualization.BarChart(document.getElementById('topRatedMoviesChart'));
                    chart.draw(dataTable, options);
                })
                .catch(error => console.error("Error during chart creation", error));
        }
    </script>
}

