@model CatalogDomain.Model.Movie

@{
    ViewBag.Title = "Edit Movie";
}

<h1>Edit</h1>

<h4>Movie</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Year" class="control-label"></label>
                <input asp-for="Year" class="form-control" min="1900" max="@DateTime.Now.Year" />
                <span asp-validation-for="Year" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="MovieLength" class="control-label"></label>
                <input asp-for="MovieLength" class="form-control" min="1" max="1000000" />
                <span asp-validation-for="MovieLength" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Poster" class="control-label"></label>
                <input asp-for="Poster" class="form-control" />
                <span asp-validation-for="Poster" class="text-danger"></span>
            </div>

            <input type="hidden" asp-for="Id" />

            <!-- Genres -->
            <div class="form-group">
                <label>Genres</label>
                <select name="selectedGenres" class="form-control chosen-select" multiple>
                    @if (ViewData["Genres"] != null && ViewBag.SelectedGenres != null)
                    {
                        foreach (var genre in (IEnumerable<SelectListItem>)ViewData["Genres"])
                        {
                            <option value="@genre.Value" selected="@(ViewBag.SelectedGenres.Contains(int.Parse(genre.Value)) ? "selected" : null)">
                                @genre.Text
                            </option>
                        }
                    }
                    else
                    {
                        <option disabled>No genres available</option>
                    }
                </select>
            </div>
            <!-- Actors -->
            <div class="form-group">
                <label>Actors</label>
                <select name="selectedActors" class="form-control chosen-select" multiple>
                    @if (ViewData["Actors"] != null && ViewBag.SelectedActors != null)
                    {
                        foreach (var actor in (IEnumerable<SelectListItem>)ViewData["Actors"])
                        {
                            <option value="@actor.Value" selected="@(ViewBag.SelectedActors.Contains(int.Parse(actor.Value)) ? "selected" : null)">
                                @actor.Text
                            </option>
                        }
                    }
                    else
                    {
                        <option disabled>No actors available</option>
                    }
                </select>
            </div>
            <!-- Directors -->
            <div class="form-group">
                <label>Directors</label>
                <select name="selectedDirectors" class="form-control chosen-select" multiple>
                    @if (ViewData["Directors"] != null && ViewBag.SelectedDirectors != null)
                    {
                        foreach (var director in (IEnumerable<SelectListItem>)ViewData["Directors"])
                        {
                            <option value="@director.Value" selected="@(ViewBag.SelectedDirectors.Contains(int.Parse(director.Value)) ? "selected" : null)">
                                @director.Text
                            </option>
                        }
                    }
                    else
                    {
                        <option disabled>No directors available</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div> 
            <div>
                <a asp-action="Index" class="btn btn-primary">Back to List</a>
            </div>

        </form>
    </div>
</div>


<!-- Corrected Scripts Section -->
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.7/chosen.jquery.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.7/chosen.min.css" rel="stylesheet" />

    <script>
        $(document).ready(function () {
            $(".chosen-select").chosen({
                no_results_text: "No genres found!",
                width: "100%",
                allow_single_deselect: true,
                placeholder_text_multiple: "---Choose genres---"
            });
        });
    </script>
}
