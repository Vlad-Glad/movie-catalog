@model IEnumerable<CatalogDomain.Model.Movie>

@{
    ViewData["Title"] = "Index";
}

<h1>Movies</h1>

<a class="btn btn-primary mb-3" type="=submit" asp-area="" asp-controller="Movies" asp-action="Import">Upload from file</a>

<a class="btn btn-primary mb-3" type="=submit" asp-area="" asp-controller="Movies" asp-action="Export">Export to excel</a>

<a class="btn btn-primary mb-3" type="=submit" asp-area="" asp-controller="Movies" asp-action="ExportDocx">Export to dox</a>

<p>
    <a asp-action="Create">Add Movie</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Year)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MovieLength)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Poster)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MovieLength)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Poster)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>


<div id="countByYearChart"></div>


@section Scripts
{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', {'packages':['corechart']});
        google.charts.setOnLoadCallback(drawCharts);

        function drawCharts() {
            fetch('/api/chart/countByYear')
                .then(response => response.json())
                .then(data => {
                    const dataTable = new google.visualization.DataTable();
                    dataTable.addColumn('string', 'Year');
                    dataTable.addColumn('number', 'Movies number');

                    data.forEach(item => {
                        dataTable.addRow([item.year, item.count]);
                 });

                    const options = {
                        title: 'Movies by Year',
                        width: '100%',
                        height: 600,
                        legend: { position: 'none' },
                        chartArea: { width: '90%' },
                        vAxis: {
                            title: 'Amount',
                            viewWindow: {
                                min: 0,
                                max: 20
                            },
                            ticks: Array.from({ length: 21 }, (_, i) => i), // [0, 1, 2, ..., 20]
                            format: '0'
                        }
                    };

                    const chart = new google.visualization.ColumnChart(document.getElementById('countByYearChart'));

                    chart.draw(dataTable, options);
                });
        }
    </script>
}
